<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">
<properties>
<comment>movie-sql.xml</comment>

	<!-- 상영중인 영화 리스트 -->
	<entry key="nowShowing">
		SELECT 
		    MOVIE_NO,
		    MOVIE_TITLE,
		    POSTER_IMG,
		    RELEASE_YEAR,
		    COUNTRY,
		    TICKETING, 
		    AUDIENCE,
		    STAR_RATING
		FROM MOVIE
		JOIN (SELECT MOVIE_NO, ROUND(AVG(STAR_RATING),1) STAR_RATING
		        FROM EVALUATION
		        WHERE EVALUATION_FL ='N'
		        GROUP BY MOVIE_NO) USING (MOVIE_NO)
		WHERE NOW_SHOWING_FL='Y'
		ORDER BY TO_NUMBER(REGEXP_REPLACE(TICKETING, '\%')) DESC
	</entry>
	
	<!-- 전체 영화 리스트 -->
	<entry key="allShow">
				SELECT 
		    MOVIE_NO,
		    MOVIE_TITLE,
		    POSTER_IMG,
		    RELEASE_YEAR,
		    COUNTRY,
		    TICKETING, 
		    AUDIENCE,
		    STAR_RATING
		FROM MOVIE
		JOIN (SELECT MOVIE_NO, ROUND(AVG(STAR_RATING),1) STAR_RATING
		        FROM EVALUATION
		        WHERE EVALUATION_FL ='N'
		        GROUP BY MOVIE_NO) USING (MOVIE_NO)
	</entry>
	
	<!-- 상세 영화 조회 -->
	<entry key="selectMovieDetail">
	SELECT MOVIE_TITLE, RELEASE_YEAR, COUNTRY, SYNOPSIS, DETAIL_IMG, POSTER_IMG, DETAIL_IMG, ROUND(AVG(STAR_RATING),1) AS STAR_RATING
	FROM MOVIE
	JOIN EVALUATION USING(MOVIE_NO)
	WHERE MOVIE_NO = ?
	GROUP BY MOVIE_TITLE, RELEASE_YEAR, COUNTRY, SYNOPSIS, DETAIL_IMG, POSTER_IMG, DETAIL_IMG
	</entry>
	
	
	<entry key="detailCommentList">
	SELECT COMMENT_NO, COMMENT_CT, MEMBER_NM,
        TO_CHAR(COMMENT_DT, 'YYYY-MM-DD') AS COMMENT_DT
	FROM "COMMENT"
	JOIN MEMBER USING(MEMBER_NO)
	WHERE MOVIE_NO = ?
	AND COMMENT_FL='N'
	ORDER BY COMMENT_NO DESC
	
	
	
	<!-- 찜한 영화 정보 조회 -->
	<entry key="selectWishMovie">
	SELECT MOVIE_NO, MOVIE_TITLE,POSTER_IMG,RELEASE_YEAR,COUNTRY,TICKETING,STAR_RATING
    FROM MOVIE
    JOIN MOVIE_LIKE USING(MOVIE_NO)
    WHERE MEMBER_NO = 4
	
	</entry>
	<!-- 코멘트 insert -->
	<entry key="insertComment">
		INSERT INTO "COMMENT" VALUES(SEQ_CNO.NEXTVAL,?,DEFAULT,?,?,DEFAULT)
	</entry>
	<!-- 평가 점수 insert -->
	<entry key="rating">
		INSERT INTO EVALUATION VALUES(?,?,?,DEFAULT,SEQ_RNO.NEXTVAL)
	</entry>
	<!-- 전체 영화 리스트 가나다 순 -->
	<entry key="allShowGanada">
		SELECT 
		      MOVIE_NO,
		      MOVIE_TITLE,
		      POSTER_IMG,
		      RELEASE_YEAR,
		      COUNTRY,
		      TICKETING, 
		      AUDIENCE,
		      STAR_RATING
		FROM MOVIE
		JOIN (SELECT MOVIE_NO, ROUND(AVG(STAR_RATING),1) STAR_RATING
		         FROM EVALUATION
		         WHERE EVALUATION_FL ='N'
		         GROUP BY MOVIE_NO) USING (MOVIE_NO)
		ORDER BY MOVIE_TITLE
	</entry>
	
	<!-- 전체 영화 리스트 인기순 -->
	<entry key="allShowPopular">
		SELECT 
		      MOVIE_NO,
		      MOVIE_TITLE,
		      POSTER_IMG,
		      RELEASE_YEAR,
		      COUNTRY,
		      TICKETING, 
		      AUDIENCE,
		      STAR_RATING
		FROM MOVIE
		JOIN (SELECT MOVIE_NO, ROUND(AVG(STAR_RATING),1) STAR_RATING
		         FROM EVALUATION
		         WHERE EVALUATION_FL ='N'
		         GROUP BY MOVIE_NO) USING (MOVIE_NO)
		ORDER BY  STAR_RATING DESC
	</entry>
	
	<!-- 전체 영화 리스트 년도순  -->
	<entry key="allShowRelease">
		SELECT 
		      MOVIE_NO,
		      MOVIE_TITLE,
		      POSTER_IMG,
		      RELEASE_YEAR,
		      COUNTRY,
		      TICKETING, 
		      AUDIENCE,
		      STAR_RATING
		FROM MOVIE
		JOIN (SELECT MOVIE_NO, ROUND(AVG(STAR_RATING),1) STAR_RATING
		         FROM EVALUATION
		         WHERE EVALUATION_FL ='N'
		         GROUP BY MOVIE_NO) USING (MOVIE_NO)
		ORDER BY  RELEASE_YEAR DESC
	</entry>
	
</properties>
